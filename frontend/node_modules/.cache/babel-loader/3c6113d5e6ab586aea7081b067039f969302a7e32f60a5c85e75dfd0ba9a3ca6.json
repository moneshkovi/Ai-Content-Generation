{"ast":null,"code":"var _jsxFileName = \"/home/tron/Ai Content Generation/frontend/src/pages/TemplatesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ApiService from '../services/api.service';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemplatesPage = () => {\n  _s();\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [templateVars, setTemplateVars] = useState({});\n  const [generatedContent, setGeneratedContent] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Define available templates\n  const templates = [{\n    id: 'blog_post',\n    name: 'Blog Post',\n    description: 'Generate a structured blog post with title, introduction, main sections, and conclusion.',\n    contentType: 'blog',\n    fields: [{\n      name: 'topic',\n      label: 'Topic',\n      type: 'text',\n      placeholder: 'e.g., Remote Work Benefits',\n      required: true\n    }, {\n      name: 'keywords',\n      label: 'Keywords (comma separated)',\n      type: 'text',\n      placeholder: 'e.g., productivity, work-life balance, flexibility',\n      required: true\n    }, {\n      name: 'tone',\n      label: 'Tone',\n      type: 'select',\n      options: ['professional', 'conversational', 'educational', 'persuasive'],\n      required: true\n    }, {\n      name: 'audience',\n      label: 'Target Audience',\n      type: 'text',\n      placeholder: 'e.g., HR professionals, business owners',\n      required: true\n    }, {\n      name: 'num_sections',\n      label: 'Number of Sections',\n      type: 'number',\n      min: 2,\n      max: 6,\n      defaultValue: 3,\n      required: true\n    }]\n  }, {\n    id: 'social_media',\n    name: 'Social Media Post',\n    description: 'Create engaging social media content optimized for the platform of your choice.',\n    contentType: 'social',\n    fields: [{\n      name: 'platform',\n      label: 'Platform',\n      type: 'select',\n      options: ['Twitter', 'LinkedIn', 'Facebook', 'Instagram'],\n      required: true\n    }, {\n      name: 'topic',\n      label: 'Topic',\n      type: 'text',\n      placeholder: 'e.g., Product Launch, Industry News',\n      required: true\n    }, {\n      name: 'tone',\n      label: 'Tone',\n      type: 'select',\n      options: ['professional', 'casual', 'enthusiastic', 'informative'],\n      required: true\n    }]\n  }, {\n    id: 'product_description',\n    name: 'Product Description',\n    description: 'Generate compelling product descriptions for your e-commerce store or marketing materials.',\n    contentType: 'product',\n    fields: [{\n      name: 'product_name',\n      label: 'Product Name',\n      type: 'text',\n      placeholder: 'e.g., Ultra Comfort Wireless Headphones',\n      required: true\n    }, {\n      name: 'features',\n      label: 'Key Features (comma separated)',\n      type: 'text',\n      placeholder: 'e.g., noise cancellation, 30-hour battery, water-resistant',\n      required: true\n    }, {\n      name: 'audience',\n      label: 'Target Audience',\n      type: 'text',\n      placeholder: 'e.g., music enthusiasts, professionals',\n      required: true\n    }, {\n      name: 'tone',\n      label: 'Tone',\n      type: 'select',\n      options: ['professional', 'persuasive', 'enthusiastic', 'technical'],\n      required: true\n    }]\n  }];\n  const handleTemplateSelect = template => {\n    setSelectedTemplate(template);\n\n    // Initialize form values with defaults\n    const initialVars = {};\n    template.fields.forEach(field => {\n      if (field.hasOwnProperty('defaultValue')) {\n        initialVars[field.name] = field.defaultValue;\n      } else if (field.type === 'select' && field.options.length > 0) {\n        initialVars[field.name] = field.options[0];\n      } else {\n        initialVars[field.name] = '';\n      }\n    });\n    setTemplateVars(initialVars);\n    setGeneratedContent(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTemplateVars({\n      ...templateVars,\n      [name]: value\n    });\n  };\n  const handleGenerate = async e => {\n    e.preventDefault();\n\n    // Validate required fields\n    const missingFields = selectedTemplate.fields.filter(field => field.required && !templateVars[field.name]).map(field => field.label);\n    if (missingFields.length > 0) {\n      toast.error(`Please fill in the following fields: ${missingFields.join(', ')}`);\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const response = await ApiService.generateFromTemplate(selectedTemplate.id, templateVars, selectedTemplate.contentType);\n      if (response.data.status === 'success') {\n        setGeneratedContent(response.data.data);\n        toast.success('Content generated successfully!');\n      } else {\n        throw new Error(response.data.error || 'Failed to generate content');\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message || 'Failed to generate content'}`);\n      console.error('Template Generation Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSave = async () => {\n    if (!generatedContent) return;\n    try {\n      setIsSaving(true);\n      const response = await ApiService.saveContent(generatedContent, selectedTemplate.contentType);\n      if (response.data.status === 'success') {\n        toast.success('Content saved successfully!');\n      } else {\n        throw new Error(response.data.error || 'Failed to save content');\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message || 'Failed to save content'}`);\n      console.error('Content Saving Error:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleCopy = () => {\n    if (!generatedContent) return;\n    navigator.clipboard.writeText(generatedContent.content).then(() => toast.success('Content copied to clipboard!')).catch(error => toast.error('Failed to copy content'));\n  };\n  const handleBack = () => {\n    setSelectedTemplate(null);\n    setTemplateVars({});\n    setGeneratedContent(null);\n  };\n\n  // Render template selection screen\n  if (!selectedTemplate) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6\",\n        children: \"Content Templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-8\",\n        children: \"Choose a template below to quickly generate specific types of content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: templates.map(template => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hover:shadow-lg transition-shadow cursor-pointer\",\n          onClick: () => handleTemplateSelect(template),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-blue-600 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-12 w-12\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 1.5,\n                d: \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: template.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-4\",\n            children: template.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center text-blue-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Use Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-4 w-4 ml-1\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M14 5l7 7m0 0l-7 7m7-7H3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, template.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render template form and results\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"flex items-center text-blue-600 mb-6\",\n      onClick: handleBack,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"h-4 w-4 mr-1\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M10 19l-7-7m0 0l7-7m-7 7h18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Back to Templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-2\",\n      children: selectedTemplate.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-6\",\n      children: selectedTemplate.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Fill Template Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleGenerate,\n          children: [selectedTemplate.fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: field.name,\n              children: [field.label, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-500\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n              id: field.name,\n              name: field.name,\n              className: \"form-select\",\n              value: templateVars[field.name] || '',\n              onChange: handleInputChange,\n              required: field.required,\n              children: field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option.charAt(0).toUpperCase() + option.slice(1)\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this) : field.type === 'number' ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: field.name,\n              name: field.name,\n              className: \"form-input\",\n              value: templateVars[field.name] || '',\n              onChange: handleInputChange,\n              min: field.min,\n              max: field.max,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: field.name,\n              name: field.name,\n              className: \"form-input\",\n              value: templateVars[field.name] || '',\n              onChange: handleInputChange,\n              placeholder: field.placeholder,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-full\",\n            disabled: isLoading,\n            children: isLoading ? 'Generating...' : 'Generate Content'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Generated Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), generatedContent ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 p-4 bg-gray-50 rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"whitespace-pre-wrap\",\n                children: generatedContent.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: handleCopy,\n                children: \"Copy to Clipboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: handleSave,\n                disabled: isSaving,\n                children: isSaving ? 'Saving...' : 'Save Content'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-12 text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"h-16 w-16 mx-auto text-gray-400\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 1.5,\n                  d: \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Fill out the template form and click \\\"Generate Content\\\" to see the result here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-blue-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Template Tips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc pl-5 space-y-2 text-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Be as specific as possible in your template details for better results.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"For best results, fill in all fields, even if they're not marked as required.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You can edit the generated content before saving if you need to make adjustments.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"This template is optimized for \", selectedTemplate.name.toLowerCase(), \" content.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(TemplatesPage, \"OIC8279/cghoErsMbPobQtAXkN0=\");\n_c = TemplatesPage;\nexport default TemplatesPage;\nvar _c;\n$RefreshReg$(_c, \"TemplatesPage\");","map":{"version":3,"names":["React","useState","ApiService","toast","jsxDEV","_jsxDEV","TemplatesPage","_s","selectedTemplate","setSelectedTemplate","templateVars","setTemplateVars","generatedContent","setGeneratedContent","isLoading","setIsLoading","isSaving","setIsSaving","templates","id","name","description","contentType","fields","label","type","placeholder","required","options","min","max","defaultValue","handleTemplateSelect","template","initialVars","forEach","field","hasOwnProperty","length","handleInputChange","e","value","target","handleGenerate","preventDefault","missingFields","filter","map","error","join","response","generateFromTemplate","data","status","success","Error","message","console","handleSave","saveContent","handleCopy","navigator","clipboard","writeText","content","then","catch","handleBack","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","htmlFor","onChange","option","charAt","toUpperCase","slice","disabled","toLowerCase","_c","$RefreshReg$"],"sources":["/home/tron/Ai Content Generation/frontend/src/pages/TemplatesPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ApiService from '../services/api.service';\nimport { toast } from 'react-toastify';\n\nconst TemplatesPage = () => {\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [templateVars, setTemplateVars] = useState({});\n  const [generatedContent, setGeneratedContent] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  \n  // Define available templates\n  const templates = [\n    {\n      id: 'blog_post',\n      name: 'Blog Post',\n      description: 'Generate a structured blog post with title, introduction, main sections, and conclusion.',\n      contentType: 'blog',\n      fields: [\n        { name: 'topic', label: 'Topic', type: 'text', placeholder: 'e.g., Remote Work Benefits', required: true },\n        { name: 'keywords', label: 'Keywords (comma separated)', type: 'text', placeholder: 'e.g., productivity, work-life balance, flexibility', required: true },\n        { name: 'tone', label: 'Tone', type: 'select', options: ['professional', 'conversational', 'educational', 'persuasive'], required: true },\n        { name: 'audience', label: 'Target Audience', type: 'text', placeholder: 'e.g., HR professionals, business owners', required: true },\n        { name: 'num_sections', label: 'Number of Sections', type: 'number', min: 2, max: 6, defaultValue: 3, required: true },\n      ]\n    },\n    {\n      id: 'social_media',\n      name: 'Social Media Post',\n      description: 'Create engaging social media content optimized for the platform of your choice.',\n      contentType: 'social',\n      fields: [\n        { name: 'platform', label: 'Platform', type: 'select', options: ['Twitter', 'LinkedIn', 'Facebook', 'Instagram'], required: true },\n        { name: 'topic', label: 'Topic', type: 'text', placeholder: 'e.g., Product Launch, Industry News', required: true },\n        { name: 'tone', label: 'Tone', type: 'select', options: ['professional', 'casual', 'enthusiastic', 'informative'], required: true },\n      ]\n    },\n    {\n      id: 'product_description',\n      name: 'Product Description',\n      description: 'Generate compelling product descriptions for your e-commerce store or marketing materials.',\n      contentType: 'product',\n      fields: [\n        { name: 'product_name', label: 'Product Name', type: 'text', placeholder: 'e.g., Ultra Comfort Wireless Headphones', required: true },\n        { name: 'features', label: 'Key Features (comma separated)', type: 'text', placeholder: 'e.g., noise cancellation, 30-hour battery, water-resistant', required: true },\n        { name: 'audience', label: 'Target Audience', type: 'text', placeholder: 'e.g., music enthusiasts, professionals', required: true },\n        { name: 'tone', label: 'Tone', type: 'select', options: ['professional', 'persuasive', 'enthusiastic', 'technical'], required: true },\n      ]\n    }\n  ];\n  \n  const handleTemplateSelect = (template) => {\n    setSelectedTemplate(template);\n    \n    // Initialize form values with defaults\n    const initialVars = {};\n    template.fields.forEach(field => {\n      if (field.hasOwnProperty('defaultValue')) {\n        initialVars[field.name] = field.defaultValue;\n      } else if (field.type === 'select' && field.options.length > 0) {\n        initialVars[field.name] = field.options[0];\n      } else {\n        initialVars[field.name] = '';\n      }\n    });\n    \n    setTemplateVars(initialVars);\n    setGeneratedContent(null);\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setTemplateVars({\n      ...templateVars,\n      [name]: value\n    });\n  };\n  \n  const handleGenerate = async (e) => {\n    e.preventDefault();\n    \n    // Validate required fields\n    const missingFields = selectedTemplate.fields\n      .filter(field => field.required && !templateVars[field.name])\n      .map(field => field.label);\n      \n    if (missingFields.length > 0) {\n      toast.error(`Please fill in the following fields: ${missingFields.join(', ')}`);\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      \n      const response = await ApiService.generateFromTemplate(\n        selectedTemplate.id,\n        templateVars,\n        selectedTemplate.contentType\n      );\n      \n      if (response.data.status === 'success') {\n        setGeneratedContent(response.data.data);\n        toast.success('Content generated successfully!');\n      } else {\n        throw new Error(response.data.error || 'Failed to generate content');\n      }\n      \n    } catch (error) {\n      toast.error(`Error: ${error.message || 'Failed to generate content'}`);\n      console.error('Template Generation Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleSave = async () => {\n    if (!generatedContent) return;\n    \n    try {\n      setIsSaving(true);\n      \n      const response = await ApiService.saveContent(\n        generatedContent,\n        selectedTemplate.contentType\n      );\n      \n      if (response.data.status === 'success') {\n        toast.success('Content saved successfully!');\n      } else {\n        throw new Error(response.data.error || 'Failed to save content');\n      }\n      \n    } catch (error) {\n      toast.error(`Error: ${error.message || 'Failed to save content'}`);\n      console.error('Content Saving Error:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  const handleCopy = () => {\n    if (!generatedContent) return;\n    \n    navigator.clipboard.writeText(generatedContent.content)\n      .then(() => toast.success('Content copied to clipboard!'))\n      .catch((error) => toast.error('Failed to copy content'));\n  };\n  \n  const handleBack = () => {\n    setSelectedTemplate(null);\n    setTemplateVars({});\n    setGeneratedContent(null);\n  };\n  \n  // Render template selection screen\n  if (!selectedTemplate) {\n    return (\n      <div>\n        <h1 className=\"text-3xl font-bold mb-6\">Content Templates</h1>\n        <p className=\"text-gray-600 mb-8\">\n          Choose a template below to quickly generate specific types of content.\n        </p>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {templates.map((template) => (\n            <div key={template.id} className=\"card hover:shadow-lg transition-shadow cursor-pointer\" onClick={() => handleTemplateSelect(template)}>\n              <div className=\"text-blue-600 mb-4\">\n                <svg className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n              </div>\n              <h2 className=\"text-xl font-semibold mb-2\">{template.name}</h2>\n              <p className=\"text-gray-600 mb-4\">{template.description}</p>\n              <div className=\"flex items-center text-blue-600\">\n                <span>Use Template</span>\n                <svg className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n                </svg>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  \n  // Render template form and results\n  return (\n    <div>\n      <button \n        className=\"flex items-center text-blue-600 mb-6\" \n        onClick={handleBack}\n      >\n        <svg className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n        </svg>\n        <span>Back to Templates</span>\n      </button>\n      \n      <h1 className=\"text-3xl font-bold mb-2\">{selectedTemplate.name}</h1>\n      <p className=\"text-gray-600 mb-6\">{selectedTemplate.description}</p>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        {/* Left column - Template Form */}\n        <div className=\"card\">\n          <h2 className=\"text-xl font-semibold mb-4\">Fill Template Details</h2>\n          \n          <form onSubmit={handleGenerate}>\n            {selectedTemplate.fields.map((field) => (\n              <div key={field.name} className=\"form-group\">\n                <label className=\"form-label\" htmlFor={field.name}>\n                  {field.label} {field.required && <span className=\"text-red-500\">*</span>}\n                </label>\n                \n                {field.type === 'select' ? (\n                  <select\n                    id={field.name}\n                    name={field.name}\n                    className=\"form-select\"\n                    value={templateVars[field.name] || ''}\n                    onChange={handleInputChange}\n                    required={field.required}\n                  >\n                    {field.options.map(option => (\n                      <option key={option} value={option}>\n                        {option.charAt(0).toUpperCase() + option.slice(1)}\n                      </option>\n                    ))}\n                  </select>\n                ) : field.type === 'number' ? (\n                  <input\n                    type=\"number\"\n                    id={field.name}\n                    name={field.name}\n                    className=\"form-input\"\n                    value={templateVars[field.name] || ''}\n                    onChange={handleInputChange}\n                    min={field.min}\n                    max={field.max}\n                    required={field.required}\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    id={field.name}\n                    name={field.name}\n                    className=\"form-input\"\n                    value={templateVars[field.name] || ''}\n                    onChange={handleInputChange}\n                    placeholder={field.placeholder}\n                    required={field.required}\n                  />\n                )}\n              </div>\n            ))}\n            \n            <button \n              type=\"submit\" \n              className=\"btn btn-primary w-full\"\n              disabled={isLoading}\n            >\n              {isLoading ? 'Generating...' : 'Generate Content'}\n            </button>\n          </form>\n        </div>\n        \n        {/* Right column - Generated Content */}\n        <div>\n          <div className=\"card mb-4\">\n            <h2 className=\"text-xl font-semibold mb-4\">Generated Content</h2>\n            \n            {generatedContent ? (\n              <div>\n                <div className=\"mb-4 p-4 bg-gray-50 rounded-md\">\n                  <pre className=\"whitespace-pre-wrap\">{generatedContent.content}</pre>\n                </div>\n                \n                <div className=\"flex flex-wrap gap-2\">\n                  <button \n                    className=\"btn btn-secondary\" \n                    onClick={handleCopy}\n                  >\n                    Copy to Clipboard\n                  </button>\n                  <button \n                    className=\"btn btn-success\" \n                    onClick={handleSave}\n                    disabled={isSaving}\n                  >\n                    {isSaving ? 'Saving...' : 'Save Content'}\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center py-12 text-gray-500\">\n                <div className=\"mb-4\">\n                  <svg className=\"h-16 w-16 mx-auto text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                </div>\n                <p>Fill out the template form and click \"Generate Content\" to see the result here.</p>\n              </div>\n            )}\n          </div>\n          \n          {/* Template Info (always shown) */}\n          <div className=\"card bg-blue-50\">\n            <h2 className=\"text-xl font-semibold mb-4\">Template Tips</h2>\n            <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n              <li>Be as specific as possible in your template details for better results.</li>\n              <li>For best results, fill in all fields, even if they're not marked as required.</li>\n              <li>You can edit the generated content before saving if you need to make adjustments.</li>\n              <li>This template is optimized for {selectedTemplate.name.toLowerCase()} content.</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TemplatesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}