{"ast":null,"code":"var _jsxFileName = \"/home/tron/Ai Content Generation/frontend/src/pages/ContentGenerationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ApiService from '../services/api.service';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentGenerationPage = () => {\n  _s();\n  var _contentTypes$find, _generatedContent$met, _generatedContent$met2, _generatedContent$met3;\n  const [formData, setFormData] = useState({\n    contentType: 'blog',\n    prompt: '',\n    maxTokens: 1000,\n    temperature: 0.7\n  });\n  const [generatedContent, setGeneratedContent] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const contentTypes = [{\n    id: 'blog',\n    name: 'Blog Post'\n  }, {\n    id: 'social',\n    name: 'Social Media Post'\n  }, {\n    id: 'product',\n    name: 'Product Description'\n  }, {\n    id: 'email',\n    name: 'Email'\n  }, {\n    id: 'ad',\n    name: 'Advertisement Copy'\n  }];\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSliderChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: parseFloat(value)\n    });\n  };\n  const handleGenerate = async e => {\n    e.preventDefault();\n    try {\n      setIsLoading(true);\n\n      // Check if prompt is empty\n      if (!formData.prompt.trim()) {\n        toast.error('Please enter a prompt');\n        setIsLoading(false);\n        return;\n      }\n      const response = await ApiService.generateContent(formData.prompt, formData.contentType, {\n        max_tokens: parseInt(formData.maxTokens),\n        temperature: formData.temperature\n      });\n      if (response.data.status === 'success') {\n        setGeneratedContent(response.data.data);\n        toast.success('Content generated successfully!');\n      } else {\n        throw new Error(response.data.error || 'Failed to generate content');\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message || 'Failed to generate content'}`);\n      console.error('Content Generation Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSave = async () => {\n    if (!generatedContent) return;\n    try {\n      setIsSaving(true);\n      const response = await ApiService.saveContent(generatedContent, formData.contentType);\n      if (response.data.status === 'success') {\n        toast.success('Content saved successfully!');\n      } else {\n        throw new Error(response.data.error || 'Failed to save content');\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message || 'Failed to save content'}`);\n      console.error('Content Saving Error:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleCopy = () => {\n    if (!generatedContent) return;\n    navigator.clipboard.writeText(generatedContent.content).then(() => toast.success('Content copied to clipboard!')).catch(error => toast.error('Failed to copy content'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Generate Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Content Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleGenerate,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: \"contentType\",\n              children: \"Content Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"contentType\",\n              name: \"contentType\",\n              className: \"form-select\",\n              value: formData.contentType,\n              onChange: handleInputChange,\n              children: contentTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type.id,\n                children: type.name\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: \"prompt\",\n              children: \"Prompt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"prompt\",\n              name: \"prompt\",\n              className: \"form-textarea\",\n              value: formData.prompt,\n              onChange: handleInputChange,\n              rows: 6,\n              placeholder: \"Enter your content prompt here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500 mt-1\",\n              children: \"Be specific about the content you want to generate. Include key points, tone, style, etc.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: \"maxTokens\",\n              children: [\"Maximum Length: \", formData.maxTokens, \" tokens\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"maxTokens\",\n              name: \"maxTokens\",\n              min: \"100\",\n              max: \"4000\",\n              step: \"100\",\n              className: \"w-full\",\n              value: formData.maxTokens,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: \"temperature\",\n              children: [\"Creativity: \", formData.temperature.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"temperature\",\n              name: \"temperature\",\n              min: \"0.1\",\n              max: \"1.0\",\n              step: \"0.1\",\n              className: \"w-full\",\n              value: formData.temperature,\n              onChange: handleSliderChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between text-xs text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"More focused\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"More creative\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-full\",\n            disabled: isLoading,\n            children: isLoading ? 'Generating...' : 'Generate Content'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Generated Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), generatedContent ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 p-4 bg-gray-50 rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"whitespace-pre-wrap\",\n                children: generatedContent.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: handleCopy,\n                children: \"Copy to Clipboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: handleSave,\n                disabled: isSaving,\n                children: isSaving ? 'Saving...' : 'Save Content'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-12 text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"h-16 w-16 mx-auto text-gray-400\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 1.5,\n                  d: \"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Fill out the form and click \\\"Generate Content\\\" to see the result here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), generatedContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Content Metadata\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Content Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: ((_contentTypes$find = contentTypes.find(t => t.id === formData.contentType)) === null || _contentTypes$find === void 0 ? void 0 : _contentTypes$find.name) || formData.contentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: ((_generatedContent$met = generatedContent.metadata) === null || _generatedContent$met === void 0 ? void 0 : _generatedContent$met.model) || 'GPT-4'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Timestamp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: (_generatedContent$met2 = generatedContent.metadata) !== null && _generatedContent$met2 !== void 0 && _generatedContent$met2.timestamp ? new Date(generatedContent.metadata.timestamp).toLocaleString() : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Tokens Used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: (_generatedContent$met3 = generatedContent.metadata) !== null && _generatedContent$met3 !== void 0 && _generatedContent$met3.tokens ? `${generatedContent.metadata.tokens.total} (${generatedContent.metadata.tokens.completion} generation)` : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentGenerationPage, \"szAc3G5sReEF1bIVCvdnKiXR1YY=\");\n_c = ContentGenerationPage;\nexport default ContentGenerationPage;\nvar _c;\n$RefreshReg$(_c, \"ContentGenerationPage\");","map":{"version":3,"names":["React","useState","ApiService","toast","jsxDEV","_jsxDEV","ContentGenerationPage","_s","_contentTypes$find","_generatedContent$met","_generatedContent$met2","_generatedContent$met3","formData","setFormData","contentType","prompt","maxTokens","temperature","generatedContent","setGeneratedContent","isLoading","setIsLoading","isSaving","setIsSaving","contentTypes","id","name","handleInputChange","e","value","target","handleSliderChange","parseFloat","handleGenerate","preventDefault","trim","error","response","generateContent","max_tokens","parseInt","data","status","success","Error","message","console","handleSave","saveContent","handleCopy","navigator","clipboard","writeText","content","then","catch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","type","rows","placeholder","min","max","step","toFixed","disabled","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","find","t","metadata","model","timestamp","Date","toLocaleString","tokens","total","completion","_c","$RefreshReg$"],"sources":["/home/tron/Ai Content Generation/frontend/src/pages/ContentGenerationPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ApiService from '../services/api.service';\nimport { toast } from 'react-toastify';\n\nconst ContentGenerationPage = () => {\n  const [formData, setFormData] = useState({\n    contentType: 'blog',\n    prompt: '',\n    maxTokens: 1000,\n    temperature: 0.7,\n  });\n  \n  const [generatedContent, setGeneratedContent] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  \n  const contentTypes = [\n    { id: 'blog', name: 'Blog Post' },\n    { id: 'social', name: 'Social Media Post' },\n    { id: 'product', name: 'Product Description' },\n    { id: 'email', name: 'Email' },\n    { id: 'ad', name: 'Advertisement Copy' },\n  ];\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  \n  const handleSliderChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: parseFloat(value)\n    });\n  };\n  \n  const handleGenerate = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setIsLoading(true);\n      \n      // Check if prompt is empty\n      if (!formData.prompt.trim()) {\n        toast.error('Please enter a prompt');\n        setIsLoading(false);\n        return;\n      }\n      \n      const response = await ApiService.generateContent(\n        formData.prompt,\n        formData.contentType,\n        {\n          max_tokens: parseInt(formData.maxTokens),\n          temperature: formData.temperature\n        }\n      );\n      \n      if (response.data.status === 'success') {\n        setGeneratedContent(response.data.data);\n        toast.success('Content generated successfully!');\n      } else {\n        throw new Error(response.data.error || 'Failed to generate content');\n      }\n      \n    } catch (error) {\n      toast.error(`Error: ${error.message || 'Failed to generate content'}`);\n      console.error('Content Generation Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleSave = async () => {\n    if (!generatedContent) return;\n    \n    try {\n      setIsSaving(true);\n      \n      const response = await ApiService.saveContent(\n        generatedContent,\n        formData.contentType\n      );\n      \n      if (response.data.status === 'success') {\n        toast.success('Content saved successfully!');\n      } else {\n        throw new Error(response.data.error || 'Failed to save content');\n      }\n      \n    } catch (error) {\n      toast.error(`Error: ${error.message || 'Failed to save content'}`);\n      console.error('Content Saving Error:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  const handleCopy = () => {\n    if (!generatedContent) return;\n    \n    navigator.clipboard.writeText(generatedContent.content)\n      .then(() => toast.success('Content copied to clipboard!'))\n      .catch((error) => toast.error('Failed to copy content'));\n  };\n  \n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold mb-6\">Generate Content</h1>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        {/* Left column - Generation Form */}\n        <div className=\"card\">\n          <h2 className=\"text-xl font-semibold mb-4\">Content Parameters</h2>\n          \n          <form onSubmit={handleGenerate}>\n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"contentType\">Content Type</label>\n              <select\n                id=\"contentType\"\n                name=\"contentType\"\n                className=\"form-select\"\n                value={formData.contentType}\n                onChange={handleInputChange}\n              >\n                {contentTypes.map(type => (\n                  <option key={type.id} value={type.id}>{type.name}</option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"prompt\">Prompt</label>\n              <textarea\n                id=\"prompt\"\n                name=\"prompt\"\n                className=\"form-textarea\"\n                value={formData.prompt}\n                onChange={handleInputChange}\n                rows={6}\n                placeholder=\"Enter your content prompt here...\"\n              ></textarea>\n              <div className=\"text-sm text-gray-500 mt-1\">\n                Be specific about the content you want to generate. Include key points, tone, style, etc.\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"maxTokens\">\n                Maximum Length: {formData.maxTokens} tokens\n              </label>\n              <input\n                type=\"range\"\n                id=\"maxTokens\"\n                name=\"maxTokens\"\n                min=\"100\"\n                max=\"4000\"\n                step=\"100\"\n                className=\"w-full\"\n                value={formData.maxTokens}\n                onChange={handleInputChange}\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"temperature\">\n                Creativity: {formData.temperature.toFixed(1)}\n              </label>\n              <input\n                type=\"range\"\n                id=\"temperature\"\n                name=\"temperature\"\n                min=\"0.1\"\n                max=\"1.0\"\n                step=\"0.1\"\n                className=\"w-full\"\n                value={formData.temperature}\n                onChange={handleSliderChange}\n              />\n              <div className=\"flex justify-between text-xs text-gray-500\">\n                <span>More focused</span>\n                <span>More creative</span>\n              </div>\n            </div>\n            \n            <button \n              type=\"submit\" \n              className=\"btn btn-primary w-full\"\n              disabled={isLoading}\n            >\n              {isLoading ? 'Generating...' : 'Generate Content'}\n            </button>\n          </form>\n        </div>\n        \n        {/* Right column - Generated Content */}\n        <div>\n          <div className=\"card mb-4\">\n            <h2 className=\"text-xl font-semibold mb-4\">Generated Content</h2>\n            \n            {generatedContent ? (\n              <div>\n                <div className=\"mb-4 p-4 bg-gray-50 rounded-md\">\n                  <pre className=\"whitespace-pre-wrap\">{generatedContent.content}</pre>\n                </div>\n                \n                <div className=\"flex flex-wrap gap-2\">\n                  <button \n                    className=\"btn btn-secondary\" \n                    onClick={handleCopy}\n                  >\n                    Copy to Clipboard\n                  </button>\n                  <button \n                    className=\"btn btn-success\" \n                    onClick={handleSave}\n                    disabled={isSaving}\n                  >\n                    {isSaving ? 'Saving...' : 'Save Content'}\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center py-12 text-gray-500\">\n                <div className=\"mb-4\">\n                  <svg className=\"h-16 w-16 mx-auto text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                </div>\n                <p>Fill out the form and click \"Generate Content\" to see the result here.</p>\n              </div>\n            )}\n          </div>\n          \n          {/* Metadata section (only shown when content is generated) */}\n          {generatedContent && (\n            <div className=\"card\">\n              <h2 className=\"text-xl font-semibold mb-4\">Content Metadata</h2>\n              \n              <div className=\"grid grid-cols-2 gap-3\">\n                <div>\n                  <div className=\"text-sm text-gray-500\">Content Type</div>\n                  <div className=\"font-medium\">\n                    {contentTypes.find(t => t.id === formData.contentType)?.name || formData.contentType}\n                  </div>\n                </div>\n                \n                <div>\n                  <div className=\"text-sm text-gray-500\">Model</div>\n                  <div className=\"font-medium\">{generatedContent.metadata?.model || 'GPT-4'}</div>\n                </div>\n                \n                <div>\n                  <div className=\"text-sm text-gray-500\">Timestamp</div>\n                  <div className=\"font-medium\">\n                    {generatedContent.metadata?.timestamp ? new Date(generatedContent.metadata.timestamp).toLocaleString() : '-'}\n                  </div>\n                </div>\n                \n                <div>\n                  <div className=\"text-sm text-gray-500\">Tokens Used</div>\n                  <div className=\"font-medium\">\n                    {generatedContent.metadata?.tokens ? `${generatedContent.metadata.tokens.total} (${generatedContent.metadata.tokens.completion} generation)` : '-'}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentGenerationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}