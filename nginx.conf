server {
    listen 80;
    server_name contentgeneration.com www.contentgeneration.com;
    
    location / {
        proxy_pass http://localhost:3000; # Frontend React dev server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # For production build (uncomment when using build)
    # location / {
    #     root /home/ec2-user/Ai-Content-Generation/frontend/build;
    #     try_files $uri /index.html;
    # }

    # API endpoint configuration
    location /api {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://localhost:5000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}

# Redirect HTTP to HTTPS (uncomment after setting up SSL)
# server {
#     listen 80;
#     server_name contentgeneration.com www.contentgeneration.com;
#     return 301 https://$host$request_uri;
# }

# HTTPS server (uncomment after setting up SSL)
# server {
#     listen 443 ssl http2;
#     server_name contentgeneration.com www.contentgeneration.com;
#     
#     ssl_certificate /etc/letsencrypt/live/contentgeneration.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/contentgeneration.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     
#     # Same location blocks as above
# }
